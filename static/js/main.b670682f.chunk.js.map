{"version":3,"sources":["redux/reducer.js","redux/actions/actionTypes.js","redux/store.js","components/header/index.js","components/header/header.js","utils/compose.js","utils/parseDate.js","utils/parseStargazersCount.js","components/spinner/index.js","components/spinner/spinner.js","components/repo-item/index.js","components/repo-item/repo-item.js","components/repo-list/index.js","components/repo-list/repo-list.js","components/pagination/index.js","components/pagination/pagination.js","components/github-service-context/github-service-context.js","components/hoc/with-github-service.js","redux/actions/actions.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","containers/main-page-container.js","components/contributor/index.js","components/contributor/contributor.js","components/contributors/index.js","components/contributors/contributors.js","components/pages/details-page.js","containers/details-page-container.js","components/app/app.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","index.js","services/github-service.js"],"names":["reducer","state","action","undefined","repos","contributors","languages","currentRepo","loading","error","type","payload","store","createStore","Header","className","to","compose","funcs","comp","reduceRight","wrapped","f","parseDate","date","moment","startOf","fromNow","parseStargazersCount","number","Math","floor","Spinner","RepoItem","id","name","stargazers_count","updated_at","html_url","target","RepoList","map","repo","key","Pagination","currentPage","initialPage","pageCount","pageRangeDisplayed","marginPagesDisplayed","forcePage","this","props","onPageChange","handlePageClick","containerClassName","pageClassName","activeClassName","pageLinkClassName","Component","React","createContext","GithubServiceProvider","Provider","GithubServiceConsumer","Consumer","withGithubService","Wrapped","githubService","reposLoaded","dataError","fetchRepos","dispatch","page","a","getMostPopularRepos","data","items","fetchReposByQuery","query","getReposByQuery","fetchRepo","getRepoById","getRepoLanguages","languages_url","languagesData","getMostActiveContributors","contributors_url","contributorsData","slice","ErrorIndicator","MainPageContainer","updateData","searchValue","saveDataToLocalStorage","localStorage","setItem","handleInputChange","inputRef","current","value","setState","selected","createRef","focus","getItem","ref","onChange","defaultProps","debouncedMainPageContainer","debounceRender","connect","Contributor","user","login","avatar_url","src","alt","Contributors","users","DetailsPage","description","owner","url","langs","Object","keys","join","DetailsPageContainer","match","params","App","role","exact","path","component","ErrorBoundary","hasError","children","API_BASE","REPOS_PER_PAGE","axios","get","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b670682f.chunk.js","sourcesContent":["import * as types from './actions/actionTypes';\n\nconst reducer = (state, action) => {\n  if (state === undefined) {\n    return {\n      repos: [],\n      contributors: [],\n      languages: {},\n      currentRepo: null,\n      loading: true,\n      error: null\n    };\n  }\n\n  switch (action.type) {\n    case types.FETCH_REPOS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case types.FETCH_REPOS_SUCCESS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case types.FETCH_REPO_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case types.FETCH_REPO_SUCCESS:\n      return {\n        ...state,\n        currentRepo: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case types.FETCH_CONTRIBUTORS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case types.FETCH_CONTRIBUTORS_SUCCESS:\n      return {\n        ...state,\n        contributors: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case types.FETCH_LANGUAGES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case types.FETCH_LANGUAGES_SUCCESS:\n      return {\n        ...state,\n        languages: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case types.FETCH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const FETCH_REPOS_REQUEST = 'FETCH_REPOS_REQUEST';\nexport const FETCH_REPOS_SUCCESS = 'FETCH_REPOS_SUCCESS';\n\nexport const FETCH_REPO_REQUEST = 'FETCH_REPO_REQUEST';\nexport const FETCH_REPO_SUCCESS = 'FETCH_REPO_SUCCESS';\n\nexport const FETCH_LANGUAGES_REQUEST = 'FETCH_LANGUAGES_REQUEST';\nexport const FETCH_LANGUAGES_SUCCESS = 'FETCH_LANGUAGES_SUCCESS';\n\nexport const FETCH_CONTRIBUTORS_REQUEST = 'FETCH_CONTRIBUTORS_REQUEST';\nexport const FETCH_CONTRIBUTORS_SUCCESS = 'FETCH_CONTRIBUTORS_SUCCESS';\n\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <Link to='/' className='header__logo'>\n        Github Dashboard\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","const compose = (...funcs) => comp => {\n  return funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import moment from 'moment';\n\nexport const parseDate = date => {\n  return moment(date).startOf('hour').fromNow();\n};\n\nexport default parseDate;\n","const parseStargazersCount = number => {\n  if (number > 999 && number <= 999999) {\n    return Math.floor(number / 100) / 10 + 'k';\n  } else {\n    return number;\n  }\n};\n\nexport default parseStargazersCount;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import './spinner.css';\nimport React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className='loadingio-spinner-double-ring-06ffj4bbadfx'>\n      <div className='ldio-bq9h1bvhxtj'>\n        <div></div>\n        <div></div>\n        <div>\n          <div></div>\n        </div>\n        <div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import RepoItem from './repo-item';\n\nexport default RepoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './repo-item.css';\nimport { parseDate, parseStargazersCount } from '../../utils';\n\nconst RepoItem = ({ id, name, stargazers_count, updated_at, html_url }) => {\n  return (\n    <div className='repo__card'>\n      <h3 className='repo__name'>\n        <Link to={`details/${id}`}>{name}</Link>\n      </h3>\n      <div className='repo__info'>\n        <div className='repo__star'>\n          {parseStargazersCount(stargazers_count)} stars\n        </div>\n        <div>\n          <i>Updated {parseDate(updated_at)}</i>\n        </div>\n      </div>\n      <Link to={html_url} target='_blank'>\n        {html_url}\n      </Link>\n    </div>\n  );\n};\n\nRepoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  stargazers_count: PropTypes.number.isRequired,\n  updated_at: PropTypes.string.isRequired,\n  html_url: PropTypes.string.isRequired\n};\n\nexport default RepoItem;\n","import RepoList from './repo-list';\n\nexport default RepoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport RepoItem from '../repo-item';\n\nconst RepoList = ({ repos }) => {\n  return (\n    <ul>\n      {repos.map(repo => (\n        <li key={repo.id}>\n          <RepoItem {...repo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nRepoList.propTypes = {\n  repos: PropTypes.arrayOf(PropTypes.object.isRequired)\n};\n\nexport default RepoList;\n","import Pagination from './pagination';\n\nexport default Pagination;\n","import React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\n\nimport './pagination.css';\n\nclass Pagination extends Component {\n  static propTypes = {\n    currentPage: PropTypes.number.isRequired,\n    handlePageClick: PropTypes.func.isRequired\n  };\n  state = { currentPage: 1 };\n\n  render() {\n    return (\n      <ReactPaginate\n        initialPage={0}\n        pageCount={10}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={1}\n        forcePage={this.props.currentPage}\n        onPageChange={this.props.handlePageClick}\n        containerClassName='pagination'\n        pageClassName='pagination__item'\n        activeClassName='pagination__item--active'\n        pageLinkClassName='pagination__item-link'\n      />\n    );\n  }\n}\n\nexport default Pagination;\n","import React from 'react';\n\nconst {\n  Provider: GithubServiceProvider,\n  Consumer: GithubServiceConsumer\n} = React.createContext();\n\nexport { GithubServiceProvider, GithubServiceConsumer };\n","import React from 'react';\nimport { GithubServiceConsumer } from '../github-service-context';\n\nconst withGithubService = () => Wrapped => {\n  return props => {\n    return (\n      <GithubServiceConsumer>\n        {githubService => <Wrapped {...props} githubService={githubService} />}\n      </GithubServiceConsumer>\n    );\n  };\n};\n\nexport default withGithubService;\n","import * as types from './actionTypes';\n\nconst reposRequested = () => {\n  return {\n    type: types.FETCH_REPOS_REQUEST\n  };\n};\n\nconst reposLoaded = repos => {\n  return {\n    type: types.FETCH_REPOS_SUCCESS,\n    payload: repos\n  };\n};\n\nconst dataError = error => {\n  return {\n    type: types.FETCH_FAILURE,\n    payload: error\n  };\n};\n\nconst repoRequested = () => {\n  return {\n    type: types.FETCH_REPO_REQUEST\n  };\n};\n\nconst repoLoaded = currentRepo => {\n  return {\n    type: types.FETCH_REPO_SUCCESS,\n    payload: currentRepo\n  };\n};\n\nconst languagesRequested = () => {\n  return {\n    type: types.FETCH_LANGUAGES_REQUEST\n  };\n};\n\nconst languagesLoaded = languages => {\n  return {\n    type: types.FETCH_LANGUAGES_SUCCESS,\n    payload: languages\n  };\n};\n\nconst contributorsRequested = () => {\n  return {\n    type: types.FETCH_CONTRIBUTORS_REQUEST\n  };\n};\n\nconst contributorsLoaded = contributors => {\n  return {\n    type: types.FETCH_CONTRIBUTORS_SUCCESS,\n    payload: contributors\n  };\n};\n\nexport const fetchRepos = (githubService, dispatch) => async page => {\n  try {\n    dispatch(reposRequested());\n    const data = await githubService.getMostPopularRepos(page);\n    dispatch(reposLoaded(data.items));\n  } catch (err) {\n    dispatch(dataError(err));\n  }\n};\n\nexport const fetchReposByQuery = (githubService, dispatch) => async (\n  query,\n  page\n) => {\n  try {\n    dispatch(reposRequested());\n    const data = await githubService.getReposByQuery(query, page);\n    dispatch(reposLoaded(data.items));\n  } catch (err) {\n    dispatch(dataError(err));\n  }\n};\n\nexport const fetchRepo = (githubService, dispatch) => async id => {\n  try {\n    dispatch(repoRequested());\n    const data = await githubService.getRepoById(id);\n    dispatch(repoLoaded(data));\n\n    dispatch(languagesRequested());\n    const languagesData = await githubService.getRepoLanguages(\n      data.languages_url\n    );\n    dispatch(languagesLoaded(languagesData));\n\n    dispatch(contributorsRequested());\n    const contributorsData = await githubService.getMostActiveContributors(\n      data.contributors_url\n    );\n    dispatch(contributorsLoaded(contributorsData.slice(0, 10)));\n  } catch (err) {\n    dispatch(dataError(err));\n  }\n};\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error-indicator'>\n      <span className='oops'>OOPS!</span>\n      <span>Something is wrong</span>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport debounceRender from 'react-debounce-render';\n\nimport { compose } from '../utils';\nimport Spinner from '../components/spinner';\nimport RepoList from '../components/repo-list';\nimport Pagination from '../components/pagination';\nimport { withGithubService } from '../components/hoc';\nimport { fetchRepos, fetchReposByQuery } from '../redux/actions/actions';\nimport ErrorIndicator from '../components/error-indicator';\nimport './main-page-container.css';\n\nclass MainPageContainer extends Component {\n  static defaultProps = {\n    error: null\n  };\n\n  static propTypes = {\n    repos: PropTypes.arrayOf(PropTypes.object.isRequired),\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n\n    this.state = {\n      currentPage: 1,\n      searchValue: ''\n    };\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n    const searchValue = localStorage.getItem('searchValue') || '';\n    const currentPage = localStorage.getItem('currentPage') || 1;\n    this.setState({ searchValue, currentPage }, () => {\n      this.updateData();\n    });\n  }\n\n  updateData = () => {\n    this.state.searchValue\n      ? this.props.fetchReposByQuery(\n          this.state.searchValue,\n          this.state.currentPage\n        )\n      : this.props.fetchRepos(this.state.currentPage);\n  };\n\n  saveDataToLocalStorage = () => {\n    const { currentPage, searchValue } = this.state;\n    localStorage.setItem('currentPage', currentPage);\n    localStorage.setItem('searchValue', searchValue);\n  };\n\n  handleInputChange = () => {\n    const searchValue = this.inputRef.current.value;\n    this.setState({ searchValue }, () => {\n      this.saveDataToLocalStorage();\n      this.updateData();\n    });\n  };\n\n  handlePageClick = data => {\n    const selected = data.selected;\n\n    this.setState({ currentPage: selected + 1 }, () => {\n      this.saveDataToLocalStorage();\n      this.updateData();\n    });\n  };\n\n  render() {\n    const { repos, loading, error } = this.props;\n    const { searchValue, currentPage } = this.state;\n\n    return (\n      <>\n        <input\n          value={searchValue}\n          ref={this.inputRef}\n          className='search-bar'\n          type='text'\n          onChange={this.handleInputChange}\n        />\n        <div className='main'>\n          {loading && <Spinner />}\n          {error && <ErrorIndicator />}\n        </div>\n        {!error && !loading && <RepoList repos={repos} />}\n        <Pagination\n          currentPage={currentPage - 1}\n          handlePageClick={this.handlePageClick}\n        />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch, { githubService }) => {\n  return {\n    fetchRepos: fetchRepos(githubService, dispatch),\n    fetchReposByQuery: fetchReposByQuery(githubService, dispatch)\n  };\n};\n\nconst mapStateToProps = ({ repos, loading, error }) => {\n  return { repos, loading, error };\n};\n\nconst debouncedMainPageContainer = debounceRender(MainPageContainer, 500);\n\nexport default compose(\n  withGithubService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(debouncedMainPageContainer);\n","import Contributor from './contributor';\n\nexport default Contributor;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './contributor.css';\n\nconst Contributor = ({ user }) => {\n  const { login, avatar_url, html_url, id } = user;\n\n  return (\n    <div className='contributor__card' key={id}>\n      <h3 className='contributor__name'>\n        <Link to={html_url} target='_blank'>\n          {login}\n        </Link>\n      </h3>\n      <img className='contributor__userpic' src={avatar_url} alt='userpic' />\n    </div>\n  );\n};\n\nContributor.propTypes = {\n  user: PropTypes.object\n};\n\nexport default Contributor;\n","import Contributors from './contributors';\n\nexport default Contributors;\n","import React from 'react';\nimport Contributor from '../contributor';\nimport PropTypes from 'prop-types';\n\nimport './contributors.css';\n\nconst Contributors = ({ users }) => {\n  return (\n    <ul className='contributor__container'>\n      {users.map(user => (\n        <li key={user.id}>\n          <Contributor user={user} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContributors.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default Contributors;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { parseDate, parseStargazersCount } from '../../utils';\nimport './details-page.css';\n\nconst DetailsPage = ({ currentRepo, languages }) => {\n  const {\n    html_url,\n    name,\n    stargazers_count,\n    updated_at,\n    description,\n    owner: { login, html_url: url, avatar_url }\n  } = currentRepo;\n\n  const langs = Object.keys(languages).join(', ');\n\n  return (\n    <div className='details__container'>\n      <h3 className='details__name'>\n        <Link to={html_url}>{name}</Link>\n      </h3>\n      <div className='details__info'>\n        <div>{parseStargazersCount(stargazers_count)} stars</div>\n        <p className='details__info'>\n          <i>Updated {parseDate(updated_at)}</i>\n        </p>\n        <img className='details__userpic' src={avatar_url} alt='userpic' />\n        <h3 className='details__info'>\n          <Link to={url} className='__nickname'>\n            {login}\n          </Link>\n        </h3>\n        {langs ? (\n          <div className='details__language'>\n            <b>Languages:</b> ${langs}\n          </div>\n        ) : null}\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n};\n\nDetailsPage.propTypes = {\n  currentRepo: PropTypes.object.isRequired,\n  languages: PropTypes.object\n};\n\nexport default DetailsPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compose } from '../utils';\nimport Spinner from '../components/spinner';\nimport Contributors from '../components/contributors';\nimport { withGithubService } from '../components/hoc';\nimport ErrorIndicator from '../components/error-indicator';\nimport DetailsPage from '../components/pages/details-page';\nimport { fetchRepo } from '../redux/actions/actions';\n\nclass DetailsPageContainer extends Component {\n  static propTypes = {\n    currentRepo: PropTypes.object,\n    fetchRepo: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    languages: PropTypes.object,\n    error: PropTypes.object,\n    contributors: PropTypes.array.isRequired\n  };\n\n  static defaultProps = {\n    error: null\n  };\n\n  componentDidMount() {\n    const { fetchRepo } = this.props;\n    const id = this.props.match.params.id;\n    fetchRepo(id);\n  }\n\n  render() {\n    const { currentRepo, loading, languages, error, contributors } = this.props;\n\n    return (\n      <>\n        {error && <ErrorIndicator />}\n        {loading && <Spinner />}\n        {currentRepo && !error && !loading && (\n          <DetailsPage currentRepo={currentRepo} languages={languages} />\n        )}\n        {contributors && !error && !loading && (\n          <Contributors users={contributors} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch, { githubService }) => {\n  return {\n    fetchRepo: fetchRepo(githubService, dispatch)\n  };\n};\n\nconst mapStateToProps = ({\n  currentRepo,\n  languages,\n  contributors,\n  loading,\n  error\n}) => {\n  return { currentRepo, languages, contributors, loading, error };\n};\n\nexport default compose(\n  withGithubService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(DetailsPageContainer);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from '../header';\nimport { MainPageContainer, DetailsPageContainer } from '../../containers';\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role='main' className='container'>\n      <Header />\n      <Switch>\n        <Route exact path='/' component={MainPageContainer} />\n        <Route path='/details/:id' component={DetailsPageContainer} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundary from './error-boundary';\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n    return hasError ? <ErrorIndicator /> : this.props.children;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './redux/store';\nimport App from './components/app/app';\nimport GithubService from './services/github-service';\nimport ErrorBoundary from './components/error-boundary';\nimport { GithubServiceProvider } from './components/github-service-context';\n\nconst githubService = new GithubService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <GithubServiceProvider value={githubService}>\n        <Router>\n          <App />\n        </Router>\n      </GithubServiceProvider>\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root')\n);\n","import axios from 'axios';\n\nexport default class GithubService {\n  API_BASE = `https://api.github.com`;\n  REPOS_PER_PAGE = 10;\n\n  getMostPopularRepos = async (page = 1) => {\n    const response = await axios.get(\n      `${this.API_BASE}/search/repositories?q=stars:>=1&page=${page}&per_page=${this.REPOS_PER_PAGE}&sort=stars&order=desc`\n    );\n    return response.data;\n  };\n\n  getRepoById = async id => {\n    const response = await axios.get(`${this.API_BASE}/repositories/${id}`);\n    return response.data;\n  };\n\n  getMostActiveContributors = async url => {\n    const response = await axios.get(url);\n    return response.data;\n  };\n\n  getReposByQuery = async (query, page = 1) => {\n    const response = await axios.get(\n      `${this.API_BASE}/search/repositories?q=${query}&page=${page}&per_page=${this.REPOS_PER_PAGE}&sort=stars&order=desc`\n    );\n    return response.data;\n  };\n\n  getRepoLanguages = async url => {\n    const response = await axios.get(url);\n    return response.data;\n  };\n}\n"],"sourceRoot":""}